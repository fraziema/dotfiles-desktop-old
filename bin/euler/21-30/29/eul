#!/usr/bin/python

from sys import argv
"""
from user 'jorgbrown'
-------
CODE:
    for ((i=2;i<=100;++i))
    do for ((j=2;j<=100;++j))
    do echo "$i^$j" | BC_LINE_LENGTH=999 bc >> powers
    done
    done
    wc powers # this is just a check - it should be 9801
    sort -u < powers | wc
-----
'mon guys, this is a pencil-and-paper problem, not a coding problem.  Euler probably could have done this one in under 5 minutes.  While asleep.

The total number of powers is 9801; really, we're just trying to find duplicates.  Specifically, let's think about, how many duplicates are there when a^b is a dupe of a smaller a raised to a larger power b?

Suppose a is a perfect square of the smaller a, but not a square of a square.  Then we have a duplicate when b is 2, 3, 4... up to 50.  That is, 49 duplicates.

Suppose a is a perfect cube of a smaller a.  When b is 2 through 33, we have duplicates of smaller a raised to the power b*3.  When b is 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, we have duplicates of a smaller a raised to the power (b/2)*3.  Total is 32 plus 17, or again, 49 duplicates.

Suppose a is the square of the square of a smaller a.  When b is 2 through 49, we have duplicates of the square root of a raised to the power (b*2).  When b is 51, 54, 57, 60, 63, 66, 69, 72, or 75, we have dupes of a^(3/4) raised to the power (b*4/3).  Total is 49 plus 9, or 58.

Suppose a is the fifth power of a smaller a.  We have dupes of fifth root of a raised to the power (b*5), which covers b from 2 to 20.  Then we have dupes of a^(2/5) raised to the power (b*5/2), which covers b of 22, 24, 26, 28, 30, 32, 34, 36, 38, 40.  Then we have dupes of a^(3/5) raised to the power (b*5/3), which covers b of 21, 27, 33, 39, 42, 45, 48, 51, 54, 57, 60.  Last, we have dupes of a^(4/5) raised to the power (b*5/4), which covers b of 44, 52, 56, 64, 68, 72, 76, and 80.  Total dupes: 48.

And the last power we have to worry about is 6.  We have dupes of the square root of a raised to power (b*2), which covers b from 2 to 50.  Then we have dupes of the sixth root to the power (b*6/4), which covers b of 52, 54, 56, 58, 60, 62, 64, 66.  And last we have dupes of the sixth root to the power (b*6/5), which covers b of 55, 65, 70, 75, and 80.  Total dupes: 62.

Now let's put it all together:

    squares: 4, 9, 25, 36, 49, 100: These 6 squares have 49 dupes each, 6 * 49 = 294

    cubes: 8, 27: These 3 cubes have 49 duplicates each: 2 * 49 = 98

    4th power: 16, 81.  These 2 have 58 dupes each: 2 * 58 = 116

    5th power: 32.  This has 48 dupes.

    6th power: 64: this has 62 dupes.

    Total # dupes: 618.  9801-618 is 9183.

    Of course, the shell helps, to check your work:
        """
""" 
Consider 2^n and 4^n. for 2<=n<=100
    2^n gives 99 terms.
    4^n = 2^2 ^n . Each term n in 4^n is the 2n term in 2^n; making only 49 unique terms (99 // 2 for 2^2n) The unique terms start at 4^51 == 2^102

    3^n and 5n gives 100 terms because 2 3 and 5 are relatively prime, so are their powers

    6^n = 2^n * 3^n also gives 100 terms. As does 7^n

    8^n = 2^3 ^n = 2^3n. 2^99 == 8^33 . This gives 66 new terms

    9^n = 3^2n --> 49 new terms

    So now consider all the perfect powers <= 100: These are easily named:
        2: 4,8,16,32,64
        3: 9,27,81
        5,6,7: 25,36,49
        10: 100

        These numbers tell where the decreases occur.

        4, 8, and 9 give duplicates 16,64,and 81. These we will think on more later...

        Terms of powers of 2:
            4: 49 (2^2n < 2^100 ignored)
            8: 66 (2^3n < 2^100 ignored)
            16: 2^100 = 16^25, 99-25 = 74**
            32: 2^100 = 32^20, 99-20 = 79
            64: 2^96 = 64^16, 99-16 = 83**
        Terms of powers of 3:
            9: 49
            27: 66 
            81: 74**
        Terms of powers of 5,6,7,10:  49 each for 25,36,49, and 100

        Terms of powers of 4: 16^n, 64^n
            16^n == 4^2n == 2^4n .
            64^n == 8^2n == 4^3n == 2^6n. 

            of the 99 terms in 16^n, 49 are in 4^2n, which includes all the terms in 2^4n. Therefore we're only going to consider the 2n duplicates; all higher order duplicates are already counted. (16^50 = 4^100 , 16^25 = 2^100)
            16^n == 4^2n: 49 
            64 == 8^2:    49

            81 == 9^2 :   49

    The proper method is this:count squares first, then cubes, then ... until out of powers <= 100

    FINALLY: numbers 4, 8, 9, 16, 25, 27, 32, 64, 81, and 100 give terms of
       49,66,49,49,49,66,79,49,49,49. This is 10 of 99 digits. Therefore, foe all terms a^b for 2<=a,b<=100, the total should be
       99*89 + 49*7 + 66*2 + 79 = 9365.

       Im told that is wrong.


       the logic is that 10^100 = 100^50 this removes 100^2 .. 100^50 as terms, which is 49, not 50. also 3^99 = 27^33, leaving 99-32 terms, or 67. 2^100 = 32^20, which is 99-19=80 terms extra.
       99*89 + 50*7 + 67*2 +80 = 9375
       i am told this is also wrong.

       ive missed one somewhere:
       4, 8, 9, 16, 25, 27, 32, 36, 49, 64, 81, 100
       50 x 50 x 50 x 80 50 50 x x 50 where x is not known yet (special cse of 2 or 3

**** THIS IS HOW TEDIOUS THE COUNTING IS: JUST TRY TO LEARN CODE YOU FOOL ***
       So, start with 9801 as all possible terms from a^b, from 2 to 100.

       100 = 10^2 : 49 duplicates (10^2n = 100^n)
       49,36,25 : 49 each (196 total)

       81: 3^4n = 81^n, 9^2n == 81^n, 27^(4n) == 81^3n
            81 duplicates 3 24 times, 9 49 times, and 27 24? times??
        27: 3^3n (33), 9^(3n/2) (33)
        9: 49
        total: 212

        64: 2^6n = 64^n
            4^3n = 64*n
            8^2n = 64^n
            16^3n = 64^2n
            32^6n = 64^5n
            16,33,49,33,16 == 147
        32:2: 4 - 1 :24
           4: 5 - 2 :40
           8: 5 - 3 :39
           16:5 - 4 :19
           total 122
        16: 2: 4-1:24   
            4: 2-1:49
            8: 4-3:24
            total 99
         8: 2 : 3-1 : 33
            4: 3-2: 33
            t 66
        4: 49
        TOTAL 483
        """
